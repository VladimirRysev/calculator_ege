@model String
@{
    var DisplayName = ViewData.ModelMetadata.DisplayName;
    if (ViewData.ModelMetadata.IsRequired)
    {
        DisplayName += "*";
    }
    var htmlAttributes = new Dictionary<string, object>
{
    {"class", "form-control"},
    {"data-bind", ViewData["data_bind"] }
    };
    if (ViewData.ContainsKey("disabled"))
    {
        htmlAttributes.Add("disabled", ViewData["disabled"]);
    }
    if (ViewData.ContainsKey("readonly"))
    {
        htmlAttributes.Add("readonly", ViewData["readonly"]);
    }
    if (ViewData.ContainsKey("id"))
    {
        var idValue =
            ViewData["id"] as string == "auto" ?
                ViewData.ModelMetadata.ContainerType.Name + ViewData.ModelMetadata.PropertyName
                :
                ViewData["id"];
        htmlAttributes.Add("id", idValue);
    }
    var textAria = false;
    var textAriaRows = 0;
    if (ViewData.ContainsKey("textAria") && ((bool)ViewData["textAria"]))
    {
        textAriaRows = ViewData["textAriaRows"] as int? ?? 3;
        htmlAttributes.Add("rows", textAriaRows);
        textAria = true;
    }
    var tooltip = ViewData["tooltip"] as string;
    var firstColSize = ViewData["colSize"] as int? ?? 3;
    var colFirstClass = $"col-sm-{firstColSize}";
    var colSecondClass = $"col-sm-{12 - firstColSize}";

    colFirstClass = "form-label";
    colSecondClass = "form-field";
    htmlAttributes.Add("style", ViewData["style"]);
    htmlAttributes.Add("placeholder", ViewData["placeholder"]);
}
<div class="form-group" id="form-group-@ViewData.ModelMetadata.PropertyName" style='@htmlAttributes["style"]' placeholder='@htmlAttributes["placeholder"]'>
    <div class="form-line">
        <label asp-for="@ViewData.ModelMetadata.PropertyName"
               class="control-label @colFirstClass"
               data-toggle="@(tooltip != null ? "tooltip" : "")"
               title="@tooltip">@DisplayName</label>
            <div class="@colSecondClass">
                @Html.PasswordFor(m => m, htmlAttributes)
                @if (!string.IsNullOrWhiteSpace(ViewData.ModelMetadata.Description))
                {
                    <p class="help-block">
                        @ViewData.ModelMetadata.Description
                    </p>
                }
            </div>
        </div>
        <div class="form-line">
            <div class="form-error">
                @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>

